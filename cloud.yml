Parameters:
  S3BucketName:
    Type: String
    Default: gradle-hero
  GitHubRepository:
    Type: String
    Default: tkgregory/gradle-hero
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref S3BucketName
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
      LifecycleConfiguration:
        Rules:
          - Id: ExpireNoncurrentVersionsRule
            Status: Enabled
            NoncurrentVersionExpiration:
              NewerNoncurrentVersions: 5
              NoncurrentDays: 1
  PublicAccessBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
            Principal: '*'
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: S3Origin
            DomainName: !Sub '${S3Bucket}.s3.amazonaws.com'
            S3OriginConfig:
              OriginAccessIdentity: ''
        Aliases:
          - !Sub '${S3BucketName}.tomgregory.com'
        ViewerCertificate:
          AcmCertificateArn: !ImportValue TomGregoryCertificate
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
        Enabled: true
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue TomGregorySiteHostedZoneId
      Name: !Sub '${S3BucketName}.tomgregory.com'
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !ImportValue GithubOidc
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub 'repo:${GitHubRepository}:*'
              ForAllValues:StringEquals:
                token.actions.githubusercontent.com:iss: https://token.actions.githubusercontent.com
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              AWS: 299404798587
      Policies:
        - PolicyName: S3WriteAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
Outputs:
  Role:
    Value: !GetAtt Role.Arn